import{$ as r,t as d,C as o,a0 as u,a1 as s}from"./index-CfFH1LjD.js";const c=async()=>{try{const i=await r.get("/liquidation");if(i.kind==="ok")return i.data;throw i.error}catch(i){return d({title:"Error",description:o(i),variant:"destructive"}),[]}},q=async i=>{var t;try{const a=await r.get("/liquidation",{id:i});if(a.kind==="ok")return(t=a.data)==null?void 0:t[0];throw a.error}catch(a){return d({title:"Error",description:o(a),variant:"destructive"}),null}},f=async i=>{try{const t=await r.get("/liquidation",i);if(t.kind==="ok")return t.data;throw t.error}catch(t){return d({title:"Error",description:o(t),variant:"destructive"}),[]}},y=async i=>{try{const t=await r.post("/liquidation",{liquidation:i});if(t.kind==="ok")return t.data;throw t.error}catch(t){return d({title:"Error",description:o(t),variant:"destructive"}),null}},g=async(i,t)=>{try{const a=await r.put("/liquidation",{id:i,liquidation:t});if(a.kind==="ok")return a.data;throw a.error}catch(a){return d({title:"Error",description:o(a),variant:"destructive"}),null}},p=async i=>{try{const t=await r.delete("/liquidation",{id:i});if(t.kind==="ok")return!0;throw t.error}catch(t){return d({title:"Error",description:o(t),variant:"destructive"}),!1}},h={handling:!1,data:{}},w=u()(s(i=>({...h,getLiquidations:async()=>{i({handling:!0},!1,{type:"liquidation/getLiquidations"});const t=await c();i(a=>({data:{...a.data,...t.reduce((e,n)=>(e[n.id]=n,e),{})},handling:!1}),!1,{type:"liquidation/getLiquidations"})},getLiquidation:async t=>{i({handling:!0},!1,{type:"liquidation/getLiquidation"});const a=await q(t);a?i(e=>({data:{...e.data,[a.id]:a},handling:!1}),!1,{type:"liquidation/getLiquidation"}):i({handling:!1},!1,{type:"liquidation/getLiquidation"})},getLiquidationByFilter:async t=>{i({handling:!0},!1,{type:"liquidation/getLiquidationByFilter"});const a=await f(t);a?i(e=>({data:{...e.data,...a.reduce((n,l)=>(n[l.id]=l,n),{})},handling:!1}),!1,{type:"liquidation/getLiquidationByFilter"}):i({handling:!1},!1,{type:"liquidation/getLiquidationByFilter"})},createLiquidation:async t=>{i({handling:!0},!1,{type:"liquidation/createLiquidation"});const a=await y(t);return a?(i(e=>({data:{...e.data,[a.id]:a},handling:!1}),!1,{type:"liquidation/createLiquidation"}),a):(i({handling:!1},!1,{type:"liquidation/createLiquidation"}),null)},updateLiquidation:async(t,a)=>{i({handling:!0},!1,{type:"liquidation/updateLiquidation"}),await g(t,a)?i(n=>({data:{...n.data,[t]:{...n.data[t],...a}},handling:!1}),!1,{type:"liquidation/updateLiquidation"}):i({handling:!1},!1,{type:"liquidation/updateLiquidation"})},deleteLiquidation:async t=>{i({handling:!0},!1,{type:"liquidation/deleteLiquidation"}),await p(t)?i(e=>{const n={...e.data};return delete n[t],{data:n,handling:!1}},!1,{type:"liquidation/deleteLiquidation"}):i({handling:!1},!1,{type:"liquidation/deleteLiquidation"})}})));export{w as u};
