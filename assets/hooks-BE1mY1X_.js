import{a2 as n,t as u,I as l,a3 as o,a4 as c}from"./index-Cw7UTnmX.js";const q=async()=>{try{const t=await n.get("/requests");if(t.kind==="ok")return t.data;throw t.error}catch(t){return u({title:"Error",description:l(t),variant:"destructive"}),[]}},i=async t=>{try{const e=await n.get("/requests",t);if(e.kind==="ok")return e.data;throw e.error}catch(e){return u({title:"Error",description:l(e),variant:"destructive"}),[]}},f=async t=>{try{const e=await n.post("/requests",{request:t});if(e.kind==="ok")return e.data;throw e.error}catch(e){return u({title:"Error",description:l(e),variant:"destructive"}),null}},y=async(t,e)=>{try{const a=await n.put("/requests",{id:t,request:e});if(a.kind==="ok")return a.data;throw a.error}catch(a){return u({title:"Error",description:l(a),variant:"destructive"}),null}},g=async t=>{try{const e=await n.delete("/requests",{id:t});if(e.kind==="ok")return!0;throw e.error}catch(e){return u({title:"Error",description:l(e),variant:"destructive"}),!1}},p={handling:!1,data:{}},h=o()(c(t=>({...p,getRequests:async()=>{t({handling:!0},!1,{type:"request/getRequests"});const e=await q();t(a=>({data:{...a.data,...e.reduce((s,r)=>(s[r.id]=r,s),{})},handling:!1}),!1,{type:"request/getRequests"})},getRequest:async e=>{t({handling:!0},!1,{type:"request/getRequest"});const a=await i({id:e});if(a){const s=a[0];t(r=>({data:{...r.data,[s.id]:s},handling:!1}),!1,{type:"request/getRequest"})}else t({handling:!1},!1,{type:"request/getRequest"})},getRequestByFilter:async e=>{t({handling:!0},!1,{type:"request/getRequestByFilter"});const a=await i(e);a?t(s=>({data:{...s.data,...a.reduce((r,d)=>(r[d.id]=d,r),{})},handling:!1}),!1,{type:"request/getRequestByFilter"}):t({handling:!1},!1,{type:"request/getRequestByFilter"})},createRequest:async e=>{t({handling:!0},!1,{type:"request/createRequest"});const a=await f(e);return a?(t(s=>({data:{...s.data,[a.id]:a},handling:!1}),!1,{type:"request/createRequest"}),a):(t({handling:!1},!1,{type:"request/createRequest"}),null)},updateRequest:async(e,a)=>{t({handling:!0},!1,{type:"request/updateRequest"}),await y(e,a)?t(r=>({data:{...r.data,[e]:{...r.data[e],...a}},handling:!1}),!1,{type:"request/updateRequest"}):t({handling:!1},!1,{type:"request/updateRequest"})},deleteRequest:async e=>{t({handling:!0},!1,{type:"request/deleteRequest"}),await g(e)?t(s=>{const r={...s.data};return delete r[e],{data:r,handling:!1}},!1,{type:"request/deleteRequest"}):t({handling:!1},!1,{type:"request/deleteRequest"})}})));export{h as u};
